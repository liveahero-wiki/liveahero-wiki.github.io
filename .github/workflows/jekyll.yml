name: Jekyll site CI

on:
  workflow_dispatch: ~
  push:
    branches: [ master ]
  schedule:
    - cron: '0 */6 * * *'
  pull_request:

jobs:
  build:
    if: "!contains(github.event.head_commit.message, '[ci skip]')"
    runs-on: ubuntu-latest
    env:
      MY_SECRET: ${{ github.token }}
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: 3.12
        cache: 'pip'

    - uses: actions/setup-node@v4
      if: ${{ github.event_name == 'pull_request' }}
      with:
        node-version: '22'
        cache: 'npm'

    - name: Install Dependencies
      if: ${{ github.event_name == 'pull_request' }}
      run: |
        npm ci

    - name: Generate data files
      run: |
        python -m pip install -r requirements.txt
        python tools/translation_download_tsv.py
        python tools/skill_evo.py
    #- name: Build the site in the jekyll/builder container
    #  run: |
    #    docker run \
    #    -v ${{ github.workspace }}:/srv/jekyll -v ${{ github.workspace }}/_site:/srv/jekyll/_site \
    #    jekyll/builder:latest /bin/bash -c "jekyll --version && chmod 777 /srv/jekyll && JEKYLL_ENV=production jekyll build --future"
    - uses: ruby/setup-ruby@v1
      with:
        ruby-version: '3.3'
        bundler-cache: true
    - name: Install dependencies
      run: bundle install
    - name: Build site
      run: JEKYLL_ENV=production bundle exec jekyll build --future

    - name: Publish (preview)
      if: ${{ github.event_name == 'pull_request' }}
      run: npm run netlify -- deploy --dir=_site --alias ${{ github.ref_name }}
      env:
        NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
        NETLIFY_AUTH_TOKEN:  ${{ secrets.NETLIFY_AUTH_TOKEN }}

    - name: Publish to Github Pages
      if: ${{ github.ref == 'refs/heads/master' }}
      run: |
        sudo chmod 777 _site
        cd _site
        touch .nojekyll
        git init
        git config --local user.email noreply@github.com
        git config --local user.name lah-wiki-bot
        git remote add origin https://${GITHUB_ACTOR}:${{ secrets.GITHUB_TOKEN }}@github.com/$GITHUB_REPOSITORY.git
        git checkout -b gh-pages
        git add --all
        git commit -m "Deploy to Github pages"
        git push origin gh-pages -f
        echo "Deploy to Github Pages complete."
